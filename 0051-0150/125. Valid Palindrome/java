class Solution {
    public boolean isPalindrome(String s) {
        if (s == null) return true;

        int left = 0;
        int right = s.length() - 1;

        while (left < right) {
            // Skip non-alphanumeric characters
            while (left < right && !Character.isLetterOrDigit(s.charAt(left))) {
                left++;
            }
            while (left < right && !Character.isLetterOrDigit(s.charAt(right))) {
                right--;
            }

            // Compare lowercased characters
            if (Character.toLowerCase(s.charAt(left)) != Character.toLowerCase(s.charAt(right))) {
                return false;
            }

            left++;
            right--;
        }

        return true;
    }
}

/////////////////////////////////////////////////////////Another Answer////////////////////////////////////////////////////////////
class Solution {
    public boolean isPalindrome(String s) {
        if (s == null) {
            return true;
        }

        // Remove spaces and convert to lowercase
        String m = s.replaceAll("\\s+", "").toLowerCase().replaceAll("[^a-zA-Z0-9\\s]", "");

        int l = 0;
        int r = m.length() - 1;

        // Two-pointer approach
        while (l <= r) {
            if (m.charAt(l) != m.charAt(r)) {
                return false;
            }
            l++;
            r--;
        }
        return true;
    }
}
